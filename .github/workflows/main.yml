# This is a GitHub Actions workflow for a CI/CD pipeline.
# It builds a Docker image, pushes it to Docker Hub, deploys it to an AWS EC2 instance,
# and then manages containers and the EC2 instance lifecycle.

name: CI/CD Pipeline for Docker and AWS EC2

on:
  push:
    branches:
      - main

jobs:
  build-push-deploy-backend:
    name: Build, Push, and Deploy Backend Docker Image
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up Docker Buildx
      - name: Set Up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 4: Build and Push Backend Docker Image
      - name: Build and Push Backend Docker Image
        uses: docker/build-push-action@v5
        with:
          context: ./FOTNIK-BACKEND
          push: true
          tags: nomanmahsood0622/fotnik-backend:latest

      # Step 5: Set up SSH Agent for EC2 Deployment
      - name: Set Up SSH Agent
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      # Step 6: Deploy Backend to EC2
      - name: Connect to EC2 and Deploy Backend
        run: |
          ssh -o StrictHostKeyChecking=no ec2-user@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'
          # Pull the latest Docker image
          docker pull nomanmahsood0622/fotnik-backend:latest

          # Stop and remove existing container
          docker stop fotnik-backend
          docker rm -f fotnik-backend || true

          # Run the new container
          docker run -d --name fotnik-backend -p 8010:8010 nomanmahsood0622/fotnik-backend:latest
          
          EOF

         # # Simulate some processing time
         # echo "Backend deployment complete. Containers running."

         # # Clean up: Stop and remove the container
         # docker stop fotnik-backend
         # docker rm fotnik-backend

         # Stop the EC2 instance
         # sudo shutdown -h now
          
